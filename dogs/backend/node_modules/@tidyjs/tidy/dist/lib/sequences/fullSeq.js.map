{"version":3,"file":"fullSeq.js","sources":["../../../src/sequences/fullSeq.ts"],"sourcesContent":["import { extent } from 'd3-array';\nimport { Granularity } from '../types';\n\n/**\n * Create a full sequence given a vector of values\n */\nexport function vectorSeq(values: number[], period: number = 1): number[] {\n  let [min, max] = extent(values) as [number, number];\n\n  const sequence: number[] = [];\n  let value = min;\n  while (value <= max) {\n    sequence.push(value);\n    value += period;\n  }\n\n  return sequence;\n}\n\n/**\n * Create a full sequence given a vector of values\n */\nexport function vectorSeqDate(\n  values: Date[],\n  granularity: Granularity = 'day',\n  period: number = 1\n): Date[] {\n  let [min, max] = extent(values) as [Date, Date];\n\n  const sequence: Date[] = [];\n  let value = new Date(min);\n  while (value <= max) {\n    sequence.push(new Date(value));\n\n    // increment date\n    if (\n      granularity === 'day' ||\n      granularity === 'd' ||\n      granularity === 'days'\n    ) {\n      value.setUTCDate(value.getUTCDate() + 1 * period);\n    } else if (\n      granularity === 'week' ||\n      granularity === 'w' ||\n      granularity === 'weeks'\n    ) {\n      value.setUTCDate(value.getUTCDate() + 7 * period);\n    } else if (\n      granularity === 'month' ||\n      granularity === 'm' ||\n      granularity === 'months'\n    ) {\n      value.setUTCMonth(value.getUTCMonth() + 1 * period);\n    } else if (\n      granularity === 'year' ||\n      granularity === 'y' ||\n      granularity === 'years'\n    ) {\n      value.setUTCFullYear(value.getUTCFullYear() + 1 * period);\n    } else {\n      throw new Error('Invalid granularity for date sequence: ' + granularity);\n    }\n  }\n\n  return sequence;\n}\n\n/**\n * Create a full sequence given a set of data.\n * @param items\n * @param key\n */\nexport function fullSeq<T extends object>(\n  key: keyof T | ((d: T) => number),\n  period?: number | null | undefined\n): (items: T[]) => number[] {\n  return function fullSeqInner(items: T[]): number[] {\n    period = period ?? 1;\n\n    const keyFn =\n      typeof key === 'function' ? key : (d: T) => (d[key] as unknown) as number;\n\n    return vectorSeq(items.map(keyFn), period);\n  };\n}\n\nexport function fullSeqDate<T extends object>(\n  key: keyof T | ((d: T) => Date),\n  granularity?: Granularity | null | undefined,\n  period?: number | null | undefined\n): (items: T[]) => Date[] {\n  return function fullSeqDateInner(items: T[]): Date[] {\n    granularity = granularity ?? 'day';\n    period = period ?? 1;\n\n    const keyFn =\n      typeof key === 'function' ? key : (d: T) => (d[key] as unknown) as Date;\n\n    return vectorSeqDate(items.map(keyFn), granularity, period);\n  };\n}\n\nexport function fullSeqDateISOString<T extends object>(\n  key: keyof T | ((d: T) => string),\n  granularity?: Granularity | null | undefined,\n  period?: number | null | undefined\n): (items: T[]) => string[] {\n  return function fullSeqDateISOStringInner(items: T[]): string[] {\n    granularity = granularity ?? 'day';\n    period = period ?? 1;\n\n    const keyFn =\n      typeof key === 'function' ? key : (d: T) => (d[key] as unknown) as string;\n\n    return vectorSeqDate(\n      items.map((d) => new Date(keyFn(d))),\n      granularity,\n      period\n    ).map((date) => date.toISOString());\n  };\n}\n"],"names":["extent"],"mappings":";;;;;;mBAM0B,QAAkB,SAAiB;AAC3D,MAAI,CAAC,KAAK,OAAOA,eAAO;AAExB,QAAM,WAAqB;AAC3B,MAAI,QAAQ;AACZ,SAAO,SAAS;AACd,aAAS,KAAK;AACd,aAAS;AAAA;AAGX,SAAO;AAAA;uBAOP,QACA,cAA2B,OAC3B,SAAiB;AAEjB,MAAI,CAAC,KAAK,OAAOA,eAAO;AAExB,QAAM,WAAmB;AACzB,MAAI,QAAQ,IAAI,KAAK;AACrB,SAAO,SAAS;AACd,aAAS,KAAK,IAAI,KAAK;AAGvB,QACE,gBAAgB,SAChB,gBAAgB,OAChB,gBAAgB;AAEhB,YAAM,WAAW,MAAM,eAAe,IAAI;AAAA,eAE1C,gBAAgB,UAChB,gBAAgB,OAChB,gBAAgB;AAEhB,YAAM,WAAW,MAAM,eAAe,IAAI;AAAA,eAE1C,gBAAgB,WAChB,gBAAgB,OAChB,gBAAgB;AAEhB,YAAM,YAAY,MAAM,gBAAgB,IAAI;AAAA,eAE5C,gBAAgB,UAChB,gBAAgB,OAChB,gBAAgB;AAEhB,YAAM,eAAe,MAAM,mBAAmB,IAAI;AAAA;AAElD,YAAM,IAAI,MAAM,4CAA4C;AAAA;AAAA;AAIhE,SAAO;AAAA;iBASP,KACA;AAEA,SAAO,sBAAsB;AAC3B,aAAS,0BAAU;AAEnB,UAAM,QACJ,OAAO,QAAQ,aAAa,MAAM,CAAC,MAAU,EAAE;AAEjD,WAAO,UAAU,MAAM,IAAI,QAAQ;AAAA;AAAA;qBAKrC,KACA,aACA;AAEA,SAAO,0BAA0B;AAC/B,kBAAc,oCAAe;AAC7B,aAAS,0BAAU;AAEnB,UAAM,QACJ,OAAO,QAAQ,aAAa,MAAM,CAAC,MAAU,EAAE;AAEjD,WAAO,cAAc,MAAM,IAAI,QAAQ,aAAa;AAAA;AAAA;8BAKtD,KACA,aACA;AAEA,SAAO,mCAAmC;AACxC,kBAAc,oCAAe;AAC7B,aAAS,0BAAU;AAEnB,UAAM,QACJ,OAAO,QAAQ,aAAa,MAAM,CAAC,MAAU,EAAE;AAEjD,WAAO,cACL,MAAM,IAAI,CAAC,MAAM,IAAI,KAAK,MAAM,MAChC,aACA,QACA,IAAI,CAAC,SAAS,KAAK;AAAA;AAAA;;;;;;;;"}