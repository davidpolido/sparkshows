{"version":3,"file":"rate.js","sources":["../../../src/item/rate.ts"],"sourcesContent":["import { rate as mathRate } from '../math/math';\n\ntype RateOptions<T> = {\n  predicate?: (d: T) => boolean;\n  allowDivideByZero?: boolean;\n};\n\n/**\n * Returns a function that computes a rate (numerator / denominator), setting the value to\n * 0 if denominator = 0 and numerator = 0.\n */\nexport function rate<T extends object>(\n  numerator: keyof T | ((d: T) => number),\n  denominator: keyof T | ((d: T) => number),\n  options?: RateOptions<T>\n) {\n  const numeratorFn =\n    typeof numerator === 'function'\n      ? numerator\n      : (d: T) => (d[numerator] as unknown) as number;\n  const denominatorFn =\n    typeof denominator === 'function'\n      ? denominator\n      : (d: T) => (d[denominator] as unknown) as number;\n\n  const { predicate, allowDivideByZero } = options ?? {};\n  return predicate == null\n    ? (d: T) => {\n        const denom = denominatorFn(d);\n        const numer = numeratorFn(d);\n        return mathRate(numer, denom, allowDivideByZero);\n      }\n    : (d: T) => {\n        if (!predicate(d)) return undefined;\n\n        const denom = denominatorFn(d);\n        const numer = numeratorFn(d);\n        return mathRate(numer, denom, allowDivideByZero);\n      };\n}\n"],"names":["mathRate"],"mappings":";;;;;;cAYE,WACA,aACA;AAEA,QAAM,cACJ,OAAO,cAAc,aACjB,YACA,CAAC,MAAU,EAAE;AACnB,QAAM,gBACJ,OAAO,gBAAgB,aACnB,cACA,CAAC,MAAU,EAAE;AAEnB,QAAM,CAAE,WAAW,qBAAsB,4BAAW;AACpD,SAAO,aAAa,OAChB,CAAC;AACC,UAAM,QAAQ,cAAc;AAC5B,UAAM,QAAQ,YAAY;AAC1B,WAAOA,UAAS,OAAO,OAAO;AAAA,MAEhC,CAAC;AACC,QAAI,CAAC,UAAU;AAAI,aAAO;AAE1B,UAAM,QAAQ,cAAc;AAC5B,UAAM,QAAQ,YAAY;AAC1B,WAAOA,UAAS,OAAO,OAAO;AAAA;AAAA;;;;"}