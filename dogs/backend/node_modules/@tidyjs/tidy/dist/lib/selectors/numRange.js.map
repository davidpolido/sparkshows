{"version":3,"file":"numRange.js","sources":["../../../src/selectors/numRange.ts"],"sourcesContent":["import { keysFromItems } from '../helpers/keysFromItems';\n\n/**\n * Returns all keys that match the prefix + num range.\n * e.g., wk, [10, 15], width=3 -> wk010, wk011, wk012, wk013, wk014, wk015\n */\nexport function numRange<T extends object>(\n  prefix: string,\n  range: [number, number],\n  width?: number\n) {\n  return (items: T[]) => {\n    const keys = keysFromItems(items);\n    const matchKeys: string[] = [];\n    for (let i = range[0]; i <= range[1]; ++i) {\n      const num = width == null ? i : new String('00000000' + i).slice(-width);\n      matchKeys.push(`${prefix}${num}`);\n    }\n\n    return keys.filter((d) => (matchKeys as (keyof T)[]).includes(d));\n  };\n}\n"],"names":["keysFromItems"],"mappings":";;;;;;kBAOE,QACA,OACA;AAEA,SAAO,CAAC;AACN,UAAM,OAAOA,4BAAc;AAC3B,UAAM,YAAsB;AAC5B,aAAS,IAAI,MAAM,IAAI,KAAK,MAAM,IAAI,EAAE;AACtC,YAAM,MAAM,SAAS,OAAO,IAAI,IAAI,OAAO,aAAa,GAAG,MAAM,CAAC;AAClE,gBAAU,KAAK,GAAG,SAAS;AAAA;AAG7B,WAAO,KAAK,OAAO,CAAC,MAAO,UAA0B,SAAS;AAAA;AAAA;;;;"}