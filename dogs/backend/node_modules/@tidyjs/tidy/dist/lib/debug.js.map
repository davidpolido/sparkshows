{"version":3,"file":"debug.js","sources":["../../src/debug.ts"],"sourcesContent":["import { TidyContext, TidyFn } from './types';\n\ntype Options = {\n  limit?: number | null;\n  output?: 'log' | 'table';\n};\n\n/**\n * Debugs items\n */\nexport function debug<T extends object>(\n  label?: string | null | undefined,\n  options?: Options | null | undefined\n): TidyFn<T> {\n  const _debug: TidyFn<T> = (items: T[], context?: TidyContext): T[] => {\n    let prefix = '[tidy.debug';\n    if (context?.groupKeys?.length) {\n      const groupKeys = context.groupKeys;\n      const groupKeyStrings = groupKeys\n        .map((keyPair: any) => keyPair.join(': '))\n        .join(', ');\n      if (groupKeyStrings.length) {\n        prefix += '|' + groupKeyStrings;\n      }\n    }\n    options = options ?? {};\n    const { limit = 10, output = 'table' } = options;\n\n    // check for sneaky group keys as last arg\n    const dashString =\n      '--------------------------------------------------------------------------------';\n    let numDashes = dashString.length;\n    const prefixedLabel = prefix + ']' + (label == null ? '' : ' ' + label);\n    numDashes = Math.max(0, numDashes - (prefixedLabel.length + 2));\n\n    console.log(`${prefixedLabel} ${dashString.substring(0, numDashes)}`);\n    console[output](\n      limit == null || limit >= items.length ? items : items.slice(0, limit)\n    );\n    return items;\n  };\n\n  return _debug;\n}\n"],"names":[],"mappings":";;;;eAWE,OACA;AAEA,QAAM,SAAoB,CAAC,OAAY;AAdzC;AAeI,QAAI,SAAS;AACb,QAAI,yCAAS,cAAT,mBAAoB;AACtB,YAAM,YAAY,QAAQ;AAC1B,YAAM,kBAAkB,UACrB,IAAI,CAAC,YAAiB,QAAQ,KAAK,OACnC,KAAK;AACR,UAAI,gBAAgB;AAClB,kBAAU,MAAM;AAAA;AAAA;AAGpB,cAAU,4BAAW;AACrB,UAAM,CAAE,QAAQ,IAAI,SAAS,WAAY;AAGzC,UAAM,aACJ;AACF,QAAI,YAAY,WAAW;AAC3B,UAAM,gBAAgB,SAAS,gBAAgB,OAAO,KAAK,MAAM;AACjE,gBAAY,KAAK,IAAI,GAAG,2BAA2B,SAAS;AAE5D,YAAQ,IAAI,GAAG,iBAAiB,WAAW,UAAU,GAAG;AACxD,YAAQ,QACN,SAAS,QAAQ,SAAS,MAAM,SAAS,QAAQ,MAAM,MAAM,GAAG;AAElE,WAAO;AAAA;AAGT,SAAO;AAAA;;;;"}