{"version":3,"file":"when.js","sources":["../../src/when.ts"],"sourcesContent":["import { TidyFn } from './types';\nimport { tidy } from './tidy';\n\n/**\n * Conditionally runs a tidy sub-flow\n */\nexport function when<T extends object>(\n  predicate: ((items: T[]) => boolean) | boolean,\n  fns: TidyFn<any, any>[]\n): TidyFn<T, any> {\n  const _when: TidyFn<T, any> = (items: T[]) => {\n    if (typeof predicate === 'function') {\n      if (!predicate(items)) return items;\n    } else if (!predicate) {\n      return items;\n    }\n\n    const results = (tidy as any)(items, ...fns);\n    return results;\n  };\n  return _when;\n}\n"],"names":["tidy"],"mappings":";;;;;;cAOE,WACA;AAEA,QAAM,QAAwB,CAAC;AAC7B,QAAI,OAAO,cAAc;AACvB,UAAI,CAAC,UAAU;AAAQ,eAAO;AAAA,eACrB,CAAC;AACV,aAAO;AAAA;AAGT,UAAM,UAAWA,UAAa,OAAO,GAAG;AACxC,WAAO;AAAA;AAET,SAAO;AAAA;;;;"}