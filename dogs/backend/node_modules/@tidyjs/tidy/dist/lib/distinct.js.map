{"version":3,"file":"distinct.js","sources":["../../src/distinct.ts"],"sourcesContent":["import { KeyOrFn, TidyFn } from './types';\nimport { SingleOrArray, singleOrArray } from './helpers/singleOrArray';\n\n/**\n * Removes items with duplicate values for the specified keys.\n * If no keys provided, uses strict equality.\n *\n * @param keys Keys to compute distinct across\n */\nexport function distinct<T extends object>(\n  keys?: SingleOrArray<KeyOrFn<T>> | null | undefined\n): TidyFn<T> {\n  const _distinct: TidyFn<T> = (items: T[]): T[] => {\n    keys = singleOrArray(keys);\n\n    if (!keys.length) {\n      // https://jsperf.com/unique-array-by-strict-equality\n      const set = new Set<T>();\n      for (const item of items) {\n        set.add(item);\n      }\n      return Array.from(set);\n    }\n\n    // compare keys\n    // https://jsperf.com/distinct-by-key\n    // turns out nested Maps are faster than string keys. AND they support\n    // and arbitrary value.\n    const rootMap = new Map();\n    const distinctItems: T[] = [];\n    const lastKey = keys[keys.length - 1];\n    for (const item of items) {\n      let map = rootMap;\n      let hasItem = false;\n\n      // go through each key to find out if we have it\n      for (const key of keys) {\n        const mapItemKey =\n          typeof key === 'function' ? key(item) : item[key as keyof T];\n        // last key, check if we already added it\n        if (key === lastKey) {\n          hasItem = map.has(mapItemKey);\n          if (!hasItem) {\n            distinctItems.push(item);\n            map.set(mapItemKey, true);\n          }\n          break;\n        }\n\n        // create maps all the way down\n        if (!map.has(mapItemKey)) {\n          map.set(mapItemKey, new Map());\n        }\n\n        // move to next inner map\n        map = map.get(mapItemKey);\n      }\n    }\n\n    return distinctItems;\n  };\n\n  return _distinct;\n}\n"],"names":["singleOrArray"],"mappings":";;;;;;kBAUE;AAEA,QAAM,YAAuB,CAAC;AAC5B,WAAOA,4BAAc;AAErB,QAAI,CAAC,KAAK;AAER,YAAM,MAAM,IAAI;AAChB,iBAAW,QAAQ;AACjB,YAAI,IAAI;AAAA;AAEV,aAAO,MAAM,KAAK;AAAA;AAOpB,UAAM,UAAU,IAAI;AACpB,UAAM,gBAAqB;AAC3B,UAAM,UAAU,KAAK,KAAK,SAAS;AACnC,eAAW,QAAQ;AACjB,UAAI,MAAM;AACV,UAAI,UAAU;AAGd,iBAAW,OAAO;AAChB,cAAM,aACJ,OAAO,QAAQ,aAAa,IAAI,QAAQ,KAAK;AAE/C,YAAI,QAAQ;AACV,oBAAU,IAAI,IAAI;AAClB,cAAI,CAAC;AACH,0BAAc,KAAK;AACnB,gBAAI,IAAI,YAAY;AAAA;AAEtB;AAAA;AAIF,YAAI,CAAC,IAAI,IAAI;AACX,cAAI,IAAI,YAAY,IAAI;AAAA;AAI1B,cAAM,IAAI,IAAI;AAAA;AAAA;AAIlB,WAAO;AAAA;AAGT,SAAO;AAAA;;;;"}