{"version":3,"file":"total.js","sources":["../../src/total.ts"],"sourcesContent":["import { mutate, MutateSpec } from './mutate';\nimport {\n  SummarizeSpec,\n  summarize,\n  summarizeAll,\n  summarizeAt,\n  summarizeIf,\n  SummaryKeyFn,\n} from './summarize';\nimport { TidyFn, Vector } from './types';\n\n/**\n * Adds a summarized total row\n */\nexport function total<\n  T extends object,\n  SummarizedSpec extends SummarizeSpec<T> = SummarizeSpec<T>,\n  MutSpec extends MutateSpec<T> = MutateSpec<T>\n>(summarizeSpec: SummarizedSpec, mutateSpec: MutSpec): TidyFn<T> {\n  const _total: TidyFn<T, T> = (items: T[]): T[] => {\n    const summarized = summarize<T, SummarizedSpec>(summarizeSpec)(items);\n    const mutated = mutate<T, MutSpec>(mutateSpec)(summarized as T[]);\n    return [...items, ...mutated];\n  };\n\n  return _total;\n}\n\n// ----------------------------------------------------------------------------\n\n/**\n * Adds a summarized total row\n */\nexport function totalAll<\n  T extends object,\n  F extends SummaryKeyFn<T>,\n  MutSpec extends MutateSpec<T> = MutateSpec<T>\n>(summaryFn: F, mutateSpec: MutSpec): TidyFn<T> {\n  const _totalAll: TidyFn<T, T> = (items: T[]): T[] => {\n    const summarized = summarizeAll<T, F>(summaryFn)(items);\n    const mutated = mutate<T, MutSpec>(mutateSpec)(summarized as T[]);\n    return [...items, ...mutated];\n  };\n\n  return _totalAll;\n}\n\n// ----------------------------------------------------------------------------\n\n/**\n * Adds a summarized total row\n */\nexport function totalIf<\n  T extends object,\n  F extends SummaryKeyFn<T>,\n  MutSpec extends MutateSpec<T> = MutateSpec<T>\n>(\n  predicateFn: (vector: Vector<T>) => boolean,\n  summaryFn: F,\n  mutateSpec: MutSpec\n): TidyFn<T> {\n  const _totalIf: TidyFn<T, T> = (items: T[]): T[] => {\n    const summarized = summarizeIf<T, F>(predicateFn, summaryFn)(items);\n    const mutated = mutate<T, MutSpec>(mutateSpec)(summarized as T[]);\n    return [...items, ...mutated];\n  };\n\n  return _totalIf;\n}\n\n// ----------------------------------------------------------------------------\n\n/**\n * Adds a summarized total row\n */\nexport function totalAt<\n  T extends object,\n  Keys extends (keyof T)[],\n  F extends SummaryKeyFn<T, Keys[number]>,\n  MutSpec extends MutateSpec<T> = MutateSpec<T>\n>(keys: Keys, summaryFn: F, mutateSpec: MutSpec): TidyFn<T> {\n  const _totalAt: TidyFn<T, T> = (items: T[]): T[] => {\n    const summarized = summarizeAt<T, Keys, F>(keys, summaryFn)(items);\n    const mutated = mutate<T, MutSpec>(mutateSpec)(summarized as T[]);\n    return [...items, ...mutated];\n  };\n\n  return _totalAt;\n}\n"],"names":["summarize","mutate","summarizeAll","summarizeIf","summarizeAt"],"mappings":";;;;;;;eAkBE,eAA+B;AAC/B,QAAM,SAAuB,CAAC;AAC5B,UAAM,aAAaA,oBAA6B,eAAe;AAC/D,UAAM,UAAUC,cAAmB,YAAY;AAC/C,WAAO,CAAC,GAAG,OAAO,GAAG;AAAA;AAGvB,SAAO;AAAA;kBAYP,WAAc;AACd,QAAM,YAA0B,CAAC;AAC/B,UAAM,aAAaC,uBAAmB,WAAW;AACjD,UAAM,UAAUD,cAAmB,YAAY;AAC/C,WAAO,CAAC,GAAG,OAAO,GAAG;AAAA;AAGvB,SAAO;AAAA;iBAaP,aACA,WACA;AAEA,QAAM,WAAyB,CAAC;AAC9B,UAAM,aAAaE,sBAAkB,aAAa,WAAW;AAC7D,UAAM,UAAUF,cAAmB,YAAY;AAC/C,WAAO,CAAC,GAAG,OAAO,GAAG;AAAA;AAGvB,SAAO;AAAA;iBAaP,MAAY,WAAc;AAC1B,QAAM,WAAyB,CAAC;AAC9B,UAAM,aAAaG,sBAAwB,MAAM,WAAW;AAC5D,UAAM,UAAUH,cAAmB,YAAY;AAC/C,WAAO,CAAC,GAAG,OAAO,GAAG;AAAA;AAGvB,SAAO;AAAA;;;;;;;"}