{"version":3,"file":"tally.js","sources":["../../src/tally.ts"],"sourcesContent":["import { summarize } from './summarize';\nimport { n } from './summary/n';\nimport { sum } from './summary/sum';\nimport { TidyFn } from './types';\n\ntype TallyOptions = {\n  readonly name?: string;\n  readonly wt?: string;\n};\n\ntype TallyOutput<Options extends TallyOptions> = Options['name'] extends string\n  ? { [K in Options['name']]: number }\n  : { n: number };\n\nexport function tally<T extends object, Options extends TallyOptions>(\n  options?: Options\n): TidyFn<T, TallyOutput<Options>> {\n  const _tally: TidyFn<T, TallyOutput<Options>> = (\n    items: T[]\n  ): TallyOutput<Options>[] => {\n    const { name = 'n', wt } = options ?? {};\n\n    const summarized = summarize({ [name]: wt == null ? n() : sum(wt as any) })(\n      items\n    );\n    return summarized as TallyOutput<Options>[];\n  };\n\n  return _tally;\n}\n"],"names":["summarize","n","sum"],"mappings":";;;;;;;;eAeE;AAEA,QAAM,SAA0C,CAC9C;AAEA,UAAM,CAAE,OAAO,KAAK,MAAO,4BAAW;AAEtC,UAAM,aAAaA,oBAAU,EAAG,OAAO,MAAM,OAAOC,QAAMC,QAAI,MAC5D;AAEF,WAAO;AAAA;AAGT,SAAO;AAAA;;;;"}