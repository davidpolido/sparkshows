{"version":3,"file":"complete.js","sources":["../../src/complete.ts"],"sourcesContent":["import { expand, KeyMap } from './expand';\nimport { leftJoin } from './leftJoin';\nimport { Key, TidyFn } from './types';\nimport { replaceNully } from './replaceNully';\nimport { SingleOrArray } from './helpers/singleOrArray';\n\n/**\n * Complete a collection with missing combinations of data\n * @param expandKeys The keys to expand to all combinations of\n * @param replaceNullySpec a map from key name to value of how to deal with undefined values\n */\nexport function complete<T extends object>(\n  expandKeys: SingleOrArray<Key> | KeyMap<T>,\n  replaceNullySpec?: Partial<T> | null | undefined\n): TidyFn<T> {\n  const _complete: TidyFn<T> = (items: T[]): T[] => {\n    const expanded = expand<T, any>(expandKeys)(items);\n    const joined = leftJoin(items)(expanded) as T[]; // actually may have some undefineds...\n    return replaceNullySpec\n      ? (replaceNully(replaceNullySpec)(joined) as T[])\n      : joined;\n  };\n\n  return _complete;\n}\n"],"names":[],"mappings":";;;;kBAYE,YACA;AAEA,QAAM,YAAuB,CAAC;AAC5B,UAAM,WAAW,OAAe,YAAY;AAC5C,UAAM,SAAS,SAAS,OAAO;AAC/B,WAAO,mBACF,aAAa,kBAAkB,UAChC;AAAA;AAGN,SAAO;AAAA;;;;"}