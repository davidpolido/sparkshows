{"version":3,"file":"assignGroupKeys.js","sources":["../../../src/helpers/assignGroupKeys.ts"],"sourcesContent":["import { GroupKey } from '../types';\n\n/**\n * Given an object and a set of group keys [[keyName, keyValue], ...]\n * set the keys as properties within the object: { [keyName]: keyValue, ... }\n * (creates a new object with these properties added)\n */\nexport function assignGroupKeys<T extends object>(d: T, keys: GroupKey[]) {\n  return {\n    ...d,\n    ...keys.reduce((accum: any, key) => ((accum[key[0]] = key[1]), accum), {}),\n  };\n}\n"],"names":[],"mappings":"yBAOkD,GAAM;AACtD,SAAO;AAAA,OACF;AAAA,OACA,KAAK,OAAO,CAAC,OAAY,eAAgB,IAAI,MAAM,IAAI,IAAK,QAAQ;AAAA;AAAA;;;;"}